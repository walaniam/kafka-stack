version: '3.7'

services:

  zookeeper:
    image: ${ZK_IMAGE}
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - kafka-stack
    volumes:
    - zookeeper_data:/var/lib/zookeeper/data
    - zookeeper_logs:/var/lib/zookeeper/log

  kafka:
    image: ${KAFKA_IMAGE}
    hostname: kafka
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL_LOCAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL_LOCAL://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://:9092,EXTERNAL_LOCAL://:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_HOSTNAME: "kafka"
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_OPTS: "-Djava.rmi.server.hostname=kafka
      -Dcom.sun.management.jmxremote.local.only=false
      -Dcom.sun.management.jmxremote.rmi.port=9997
      -Dcom.sun.management.jmxremote.port=9997
      -Dcom.sun.management.jmxremote.authenticate=false
      -Dcom.sun.management.jmxremote.ssl=false"
    volumes:
      - kafka_data:/var/lib/kafka/data
    ports:
      - 29092:29092
    networks:
      - kafka-stack
    depends_on:
      - zookeeper

  schema-registry:
    image: ${KAFKA_SCHEMA_REGISTRY_IMAGE}
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_DEBUG: "true"
    networks:
      - kafka-stack
    depends_on:
      - zookeeper
      - kafka

  rest-proxy:
    image: ${KAFKA_REST_IMAGE}
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    networks:
      - kafka-stack
    depends_on:
      - zookeeper
      - kafka
      - schema-registry

  kafka-connect:
    image: ${KAFKA_CONNECT_IMAGE}
    ports:
      - 8083:8083
    hostname: kafka-connect
    container_name: kafka-connect
    networks:
      - kafka-stack
    depends_on:
      - kafka
      - schema-registry
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _connect_status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"

  kafka-ui:
    container_name: kafka-ui
    image: ${KAFKA_UI_IMAGE}
    ports:
      - 8080:8080
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
      - kafka-connect
    networks:
      - kafka-stack
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9997
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
#      KAFKA_CLUSTERS_1_NAME: secondLocal
#      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka1:29092
#      KAFKA_CLUSTERS_1_ZOOKEEPER: zookeeper1:2181
#      KAFKA_CLUSTERS_1_JMXPORT: 9998
#      KAFKA_CLUSTERS_1_SCHEMAREGISTRY: http://schemaregistry1:8085
#      KAFKA_CLUSTERS_1_KAFKACONNECT_0_NAME: first
#      KAFKA_CLUSTERS_1_KAFKACONNECT_0_ADDRESS: http://kafka-connect0:8083

networks:
  kafka-stack:
    driver: bridge

volumes:
  zookeeper_data:
  zookeeper_logs:
  kafka_data: