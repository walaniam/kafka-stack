version: '3.7'

services:

  zookeeper:
    image: ${ZK_IMAGE}
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - kafka-stack
    volumes:
    - zookeeper_data:/var/lib/zookeeper/data
    - zookeeper_logs:/var/lib/zookeeper/log

  kafka:
    image: ${KAFKA_IMAGE}
    hostname: kafka
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - kafka_data:/var/lib/kafka/data
    ports:
      - 9092:9092
    networks:
      - kafka-stack
    depends_on:
      - zookeeper

  schema-registry:
    image: ${KAFKA_SCHEMA_REGISTRY_IMAGE}
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_DEBUG: "true"
    networks:
      - kafka-stack
    depends_on:
      - zookeeper
      - kafka

  rest-proxy:
    image: ${KAFKA_REST_IMAGE}
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    networks:
      - kafka-stack
    depends_on:
      - zookeeper
      - kafka
      - schema-registry

networks:
  kafka-stack:
    driver: bridge

volumes:
  zookeeper_data:
  zookeeper_logs:
  kafka_data: